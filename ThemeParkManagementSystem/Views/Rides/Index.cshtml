@using PagedList;
@using PagedList.Mvc;

@model IPagedList<ThemeParkManagementSystem.Models.RIDE>

@{
    ViewBag.Title = "Index";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<div style="font-family:Arial">

    <h2>Rides</h2>

    <p>
        @if (Convert.ToBoolean(ViewData["userRole"]))
        {
            @Html.ActionLink("Create New", "Create")
        }
    </p>
    <p>
        @using (Html.BeginForm("Index", "Rides", FormMethod.Get))
        {
            <text> Search By: </text> @Html.RadioButton("searchBy", "Name") <text> Ride Name </text>
            @Html.TextBox("search")<input type="submit" value="Search" />
        }
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                Admission Price
            </th>
            <th>
                Location
            </th>
            <th>
                Rainout Count
            </th>
            <th>
                Status
            </th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="5"> There are no searches for your result</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RideName)
                    </td>
                    <td>
                        <text>$</text>@Html.DisplayFor(modelItem => item.RidePrice)
                    </td>
                    <td>
                        @if(item.IsOutside)
                        {
                            <text>Outside</text>
                        }
                        @if(!item.IsOutside)
                        {
                            <text>Inside</text>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RainOutCount)
                    </td>
                    <td>
                        @if(item.IsOpen)
                        {
                            <text>Open</text>
                        }
                        @if(!item.IsOpen)
                        {
                            <text>Closed</text>
                        }
                    </td>
                    <td>
                        @if (Convert.ToBoolean(ViewData["userRole"]))
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.RideID }) <text> | </text>
                        }
                        @Html.ActionLink("Details", "Details", new { id = item.RideID })
                        @if (Convert.ToBoolean(ViewData["userRole"]))
                        {
                            <text> | </text>@Html.ActionLink("Delete", "Delete", new { id = item.RideID })
                        }
                        @if (item.IsOutside && item.IsOpen)
                        {
                            <text> | </text>@Html.ActionLink("Issue Rainout", "Rainout", new { id = item.RideID })
                        }
                    </td>
                </tr>
            }
        }
    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request["sortBy"] }),
new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })

</div>

<p>
    @Html.ActionLink("Access Maintenance Page", "Index", "Maintenance")
</p>

<p>
    @Html.ActionLink("Access Rides Report Page", "Index", "Reports")
</p>
